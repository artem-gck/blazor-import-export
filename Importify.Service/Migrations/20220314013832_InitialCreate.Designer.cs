// <auto-generated />
using System;
using Importify.Service.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Importify.Service.Migrations
{
    [DbContext(typeof(ImportifyContext))]
    [Migration("20220314013832_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Importify.Service.Model.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Importify.Service.Model.CategoryExport", b =>
                {
                    b.Property<int>("CategoryExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryExportId"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("CategoryExportId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("YearId");

                    b.ToTable("CategoryExports");
                });

            modelBuilder.Entity("Importify.Service.Model.CategoryImport", b =>
                {
                    b.Property<int>("CategoryImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryImportId"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("CategoryImportId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("YearId");

                    b.ToTable("CategoryImports");
                });

            modelBuilder.Entity("Importify.Service.Model.CommonExport", b =>
                {
                    b.Property<int>("CommonExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonExportId"), 1L, 1);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("CommonExportId");

                    b.HasIndex("CountryId");

                    b.HasIndex("YearId");

                    b.ToTable("CommonExports");
                });

            modelBuilder.Entity("Importify.Service.Model.CommonImport", b =>
                {
                    b.Property<int>("CommonImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonImportId"), 1L, 1);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("CommonImportId");

                    b.HasIndex("CountryId");

                    b.HasIndex("YearId");

                    b.ToTable("CommonImports");
                });

            modelBuilder.Entity("Importify.Service.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<decimal?>("Gdp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Population")
                        .HasColumnType("bigint");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Importify.Service.Model.Year", b =>
                {
                    b.Property<int>("YearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearId"), 1L, 1);

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("YearId");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("Importify.Service.Model.CategoryExport", b =>
                {
                    b.HasOne("Importify.Service.Model.Category", "Category")
                        .WithMany("CategoryExports")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Importify.Service.Model.Country", "Country")
                        .WithMany("CategoryExports")
                        .HasForeignKey("CountryId");

                    b.HasOne("Importify.Service.Model.Year", "Year")
                        .WithMany("CategoryExports")
                        .HasForeignKey("YearId");

                    b.Navigation("Category");

                    b.Navigation("Country");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Importify.Service.Model.CategoryImport", b =>
                {
                    b.HasOne("Importify.Service.Model.Category", "Category")
                        .WithMany("CategoryImports")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Importify.Service.Model.Country", "Country")
                        .WithMany("CategoryImports")
                        .HasForeignKey("CountryId");

                    b.HasOne("Importify.Service.Model.Year", "Year")
                        .WithMany("CategoryImports")
                        .HasForeignKey("YearId");

                    b.Navigation("Category");

                    b.Navigation("Country");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Importify.Service.Model.CommonExport", b =>
                {
                    b.HasOne("Importify.Service.Model.Country", "Country")
                        .WithMany("CommonExports")
                        .HasForeignKey("CountryId");

                    b.HasOne("Importify.Service.Model.Year", "Year")
                        .WithMany("CommonExports")
                        .HasForeignKey("YearId");

                    b.Navigation("Country");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Importify.Service.Model.CommonImport", b =>
                {
                    b.HasOne("Importify.Service.Model.Country", "Country")
                        .WithMany("CommonImports")
                        .HasForeignKey("CountryId");

                    b.HasOne("Importify.Service.Model.Year", "Year")
                        .WithMany("CommonImports")
                        .HasForeignKey("YearId");

                    b.Navigation("Country");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Importify.Service.Model.Category", b =>
                {
                    b.Navigation("CategoryExports");

                    b.Navigation("CategoryImports");
                });

            modelBuilder.Entity("Importify.Service.Model.Country", b =>
                {
                    b.Navigation("CategoryExports");

                    b.Navigation("CategoryImports");

                    b.Navigation("CommonExports");

                    b.Navigation("CommonImports");
                });

            modelBuilder.Entity("Importify.Service.Model.Year", b =>
                {
                    b.Navigation("CategoryExports");

                    b.Navigation("CategoryImports");

                    b.Navigation("CommonExports");

                    b.Navigation("CommonImports");
                });
#pragma warning restore 612, 618
        }
    }
}
